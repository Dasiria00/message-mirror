name: Android Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java (JDK)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Build split-per-ABI APKs (release)
        run: flutter build apk --release --split-per-abi -t lib/main.dart

      - name: Rename APKs with version and ABI
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            VERSION="${{ github.ref_name }}"
          else
            VERSION="ci-${{ github.run_number }}"
          fi
          VERSION_NO_V="${VERSION#v}"
          mkdir -p dist
          cp build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk "dist/message-mirror-${VERSION_NO_V}-armeabi-v7a.apk"
          cp build/app/outputs/flutter-apk/app-arm64-v8a-release.apk "dist/message-mirror-${VERSION_NO_V}-arm64-v8a.apk"
          cp build/app/outputs/flutter-apk/app-x86_64-release.apk    "dist/message-mirror-${VERSION_NO_V}-x86_64.apk"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: dist/*.apk

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/*.apk
          generate_release_notes: true


